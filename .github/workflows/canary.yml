name: Canary
on:
  pull_request:
    branches:
      - 'master'
  merge_group:
    types: [checks_requested]

env:
  GH_TOKEN: ${{ secrets.ARI_ADMIN_PAT_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_CONFIG_PROVENANCE: true

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn -v
          yarn install --immutable

      - name: Build
        run: yarn build

      - name: Upload Build Results
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            packages/@magic-ext/*/dist
            packages/@magic-sdk/*/dist
            packages/*/dist
          overwrite: true

  create_canary:
    runs-on: ubuntu-22.04
    name: Canary
    permissions:
      contents: read
      id-token: write
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn -v
          yarn install --immutable

      - name: Update versions for canary
        run: |
          # Create a canary version based on current version and PR info
          CURRENT_VERSION=$(node -p "require('./packages/magic-sdk/package.json').version")
          PR_NUM="${{ github.event.pull_request.number }}"
          RUN_NUMBER="${{ github.run_number }}"
          COMMIT_SHA=$(git rev-parse HEAD | cut -c1-10)

          # Generate canary version in the format: version-canary.PR.RUN.COMMIT
          if [ -n "$PR_NUM" ] && [ "$PR_NUM" != "" ]; then
            CANARY_VERSION="${CURRENT_VERSION}-canary.${PR_NUM}.${RUN_NUMBER}.${COMMIT_SHA}"
          else
            CANARY_VERSION="${CURRENT_VERSION}-canary.${RUN_NUMBER}.${COMMIT_SHA}"
          fi

          echo "Generated canary version: $CANARY_VERSION"

          # Update all package.json files with the canary version using lerna
          yarn lerna version "$CANARY_VERSION" --no-git-tag-version --no-push --yes --exact

      - name: Rebuild with canary versions
        run: yarn build

      - name: Create Canary Release
        run: |
          # Get the updated version from package.json after lerna update
          UPDATED_VERSION=$(node -p "require('./packages/magic-sdk/package.json').version")
          echo "Publishing canary with version: $UPDATED_VERSION"

          # Use shipit with the specific version to publish the canary
          yarn auto shipit --use-version "$UPDATED_VERSION" -v
